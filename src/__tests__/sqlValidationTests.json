[
  {
    "input": [
      "CREATE DATABASE dbname;",
      "CREATE SCHEMA schemaname;",
      "CREATE TABLE tablename (column1 INT, column2 VARCHAR(255));",
      "CREATE VIEW viewname AS SELECT column1, column2 FROM tablename;",
      "CREATE TRIGGER triggername BEFORE INSERT ON tablename FOR EACH ROW BEGIN ... END;",
      "CREATE FUNCTION funcname() RETURNS INT BEGIN RETURN 1; END;",
      "CREATE INDEX idxname ON tablename (column1);",
      "CREATE PROCEDURE procname() BEGIN ... END;"
    ],
    "expected": [
      "SQL query of type CREATE_DATABASE detected: CREATE DATABASE dbname;",
      "SQL query of type CREATE_SCHEMA detected: CREATE SCHEMA schemaname;",
      "SQL query of type CREATE_TABLE detected: CREATE TABLE tablename (column1 INT, column2 VARCHAR(255));",
      "SQL query of type CREATE_VIEW detected: CREATE VIEW viewname AS SELECT column1, column2 FROM tablename;",
      "SQL query of type CREATE_TRIGGER detected: CREATE TRIGGER triggername BEFORE INSERT ON tablename FOR EACH ROW BEGIN ... END;",
      "SQL query of type CREATE_FUNCTION detected: CREATE FUNCTION funcname() RETURNS INT BEGIN RETURN 1; END;",
      "SQL query of type CREATE_INDEX detected: CREATE INDEX idxname ON tablename (column1);",
      "SQL query of type CREATE_PROCEDURE detected: CREATE PROCEDURE procname() BEGIN ... END;"
    ]
  },
  {
    "input": [
      "DROP DATABASE dbname;",
      "DROP SCHEMA schemaname;",
      "DROP TABLE tablename;",
      "DROP VIEW viewname;",
      "DROP TRIGGER triggername;",
      "DROP FUNCTION funcname;",
      "DROP INDEX idxname ON tablename;",
      "DROP PROCEDURE procname;"
    ],
    "expected": [
      "SQL query of type DROP_DATABASE detected: DROP DATABASE dbname;",
      "SQL query of type DROP_SCHEMA detected: DROP SCHEMA schemaname;",
      "SQL query of type DROP_TABLE detected: DROP TABLE tablename;",
      "SQL query of type DROP_VIEW detected: DROP VIEW viewname;",
      "SQL query of type DROP_TRIGGER detected: DROP TRIGGER triggername;",
      "SQL query of type DROP_FUNCTION detected: DROP FUNCTION funcname;",
      "SQL query of type DROP_INDEX detected: DROP INDEX idxname ON tablename;",
      "SQL query of type DROP_PROCEDURE detected: DROP PROCEDURE procname;"
    ]
  },
  {
    "input": [
      "ALTER DATABASE dbname MODIFY NAME = newname;",
      "ALTER SCHEMA schemaname RENAME TO newname;",
      "ALTER TABLE tablename ADD COLUMN column3 INT;",
      "ALTER VIEW viewname AS SELECT column1, column2 FROM tablename;",
      "ALTER TRIGGER triggername AFTER INSERT ON tablename FOR EACH ROW BEGIN ... END;",
      "ALTER FUNCTION funcname() RETURNS INT BEGIN RETURN 2; END;",
      "ALTER INDEX idxname RENAME TO newindexname;",
      "ALTER PROCEDURE procname() BEGIN ... END;"
    ],
    "expected": [
      "SQL query of type ALTER_DATABASE detected: ALTER DATABASE dbname MODIFY NAME = newname;",
      "SQL query of type ALTER_SCHEMA detected: ALTER SCHEMA schemaname RENAME TO newname;",
      "SQL query of type ALTER_TABLE detected: ALTER TABLE tablename ADD COLUMN column3 INT;",
      "SQL query of type ALTER_VIEW detected: ALTER VIEW viewname AS SELECT column1, column2 FROM tablename;",
      "SQL query of type ALTER_TRIGGER detected: ALTER TRIGGER triggername AFTER INSERT ON tablename FOR EACH ROW BEGIN ... END;",
      "SQL query of type ALTER_FUNCTION detected: ALTER FUNCTION funcname() RETURNS INT BEGIN RETURN 2; END;",
      "SQL query of type ALTER_INDEX detected: ALTER INDEX idxname RENAME TO newindexname;",
      "SQL query of type ALTER_PROCEDURE detected: ALTER PROCEDURE procname() BEGIN ... END;"
    ]
  },
  {
    "input": [
      "SHOW BINARY LOGS;",
      "SHOW BINLOG EVENTS;",
      "SHOW CHARACTER SET;",
      "SHOW COLLATION;",
      "SHOW COLUMNS FROM tablename;",
      "SHOW CREATE TABLE tablename;",
      "SHOW DATABASES;",
      "SHOW ENGINE STATUS;"
    ],
    "expected": [
      "SQL query of type SHOW_BINARY detected: SHOW BINARY LOGS;",
      "SQL query of type SHOW_BINLOG detected: SHOW BINLOG EVENTS;",
      "SQL query of type SHOW_CHARACTER detected: SHOW CHARACTER SET;",
      "SQL query of type SHOW_COLLATION detected: SHOW COLLATION;",
      "SQL query of type SHOW_COLUMNS detected: SHOW COLUMNS FROM tablename;",
      "SQL query of type SHOW_CREATE detected: SHOW CREATE TABLE tablename;",
      "SQL query of type SHOW_DATABASES detected: SHOW DATABASES;",
      "SQL query of type SHOW_ENGINE detected: SHOW ENGINE STATUS;"
    ]
  },
  {
    "input": [
      "SELECT * FROM tablename;",
      "INSERT INTO tablename (column1) VALUES (value1);",
      "UPDATE tablename SET column1 = value1 WHERE condition;",
      "DELETE FROM tablename WHERE condition;",
      "TRUNCATE TABLE tablename;"
    ],
    "expected": [
      "SQL query of type SELECT detected: SELECT * FROM tablename;",
      "SQL query of type INSERT detected: INSERT INTO tablename (column1) VALUES (value1);",
      "SQL query of type UPDATE detected: UPDATE tablename SET column1 = value1 WHERE condition;",
      "SQL query of type DELETE detected: DELETE FROM tablename WHERE condition;",
      "SQL query of type TRUNCATE detected: TRUNCATE TABLE tablename;"
    ]
  },
  {
    "input": [
      "ANONYMOUS_BLOCK BEGIN ... END;",
      "SOME UNKNOWN QUERY;"
    ],
    "expected": [
      "SQL query of type ANON_BLOCK detected: ANONYMOUS_BLOCK BEGIN ... END;",
      "SQL query of type UNKNOWN detected: SOME UNKNOWN QUERY;"
    ]
  }
]